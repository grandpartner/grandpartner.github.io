{"version":3,"sources":["./src/admin/admin.component.html","./src/admin/dashboard/dashboard.component.html","./src/admin/login/admin-login.component.html","./src/admin/manage-account/manage-account.component.html","./src/admin/manage-client/manage-client.component.html","./src/admin/manage-transaction/manage-transaction.component.html","./src/admin/BaseAdminComponent.ts","./src/admin/admin-routing.module.ts","./src/admin/admin.component.ts","./src/admin/admin.guard.ts","./src/admin/admin.module.ts","./src/admin/dashboard/dashboard.component.ts","./src/admin/login/admin-login.component.ts","./src/admin/login/modal.ts","./src/admin/login/style.less","./src/admin/manage-account/manage-account.component.ts","./src/admin/manage-client/manage-client.component.ts","./src/admin/manage-transaction/manage-transaction.component.ts","./src/admin/styles/common.less","./src/admin/styles/layout.less"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["export default \"<header role=\\\"banner\\\">\\r\\n    <h1>Admin Panel</h1>\\r\\n    <ul class=\\\"utilities\\\">\\r\\n      <li class=\\\"users\\\">\\r\\n        <div class=\\\"half\\\">\\r\\n          <label for=\\\"profile2\\\" class=\\\"profile-dropdown\\\">\\r\\n            <input type=\\\"checkbox\\\" id=\\\"profile2\\\">\\r\\n            <img src=\\\"https://cdn0.iconfinder.com/data/icons/avatars-3/512/avatar_hipster_guy-512.png\\\">\\r\\n            <span>John Doe</span>\\r\\n            <label for=\\\"profile2\\\"><i class=\\\"fa fa-bars\\\"></i></label>\\r\\n            <ul>\\r\\n              <li><a href=\\\"#\\\"><i class=\\\"mdi mdi-email-outline\\\"></i>Messages</a></li>\\r\\n              <li><a href=\\\"#\\\"><i class=\\\"mdi mdi-account\\\"></i>Account</a></li>\\r\\n              <li><a href=\\\"#\\\"><i class=\\\"mdi mdi-settings\\\"></i>Settings</a></li>\\r\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"logout()\\\"><i class=\\\"mdi mdi-logout\\\"></i>Logout</a></li>\\r\\n            </ul>\\r\\n          </label>\\r\\n        </div>\\r\\n      \\r\\n      </li>\\r\\n    </ul>\\r\\n  </header>\\r\\n  \\r\\n  <nav role=\\\"navigation\\\">\\r\\n    <ul class=\\\"main\\\">\\r\\n      <li class=\\\"dashboard\\\"><a routerLink=\\\"dashboard\\\" routerLinkActive=\\\"active-link\\\"><i class=\\\"fa fa-th\\\"></i> Dashboard</a></li>\\r\\n      <li class=\\\"write\\\"><a routerLink=\\\"clients-management\\\" routerLinkActive=\\\"active-link\\\"> <i class=\\\"fa fa-users\\\"></i> Manage clients</a></li>\\r\\n      <li class=\\\"edit\\\"><a routerLink=\\\"transaction-management\\\" routerLinkActive=\\\"active-link\\\"><i class=\\\"fa fa-history\\\"></i> Manage transaction</a></li>\\r\\n      <li class=\\\"comments\\\"><a routerLink=\\\"account-management\\\" routerLinkActive=\\\"active-link\\\"> <i class=\\\"fa fa-tasks\\\"></i> Account management</a></li>\\r\\n      <li class=\\\"users\\\"><a ><i class=\\\"fa fa-calendar-minus\\\"></i> Transaction history</a></li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n  \\r\\n   <main role=\\\"main\\\" class=\\\"admin-main\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n  <footer role=\\\"contentinfo\\\">&copy; Copyright 2020, Grand partner</footer>\\r\\n  <indentity-preview-dialog></indentity-preview-dialog>\\r\\n  <success-dialog></success-dialog>\\r\\n  <error-dialog></error-dialog>\"","export default \"<h2>Dashboard</h2>\\r\\n<div class=\\\"row dashboardCard\\\">\\r\\n\\t<div class=\\\"col-lg-3 col-md-6 col-xs-12\\\">\\r\\n\\t\\t<a routerLink=\\\"../clients-management\\\" routerLinkActive=\\\"active-link\\\">\\r\\n\\t\\t\\t<p-card header=\\\"Users - {{totalRecords}}\\\">\\r\\n\\t\\t\\t    <div>users/clients or profiles management</div>\\r\\n\\t\\t\\t</p-card>\\r\\n\\t    </a>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-lg-3 col-md-6 col-xs-12\\\">\\r\\n\\t\\t<a routerLink=\\\"../account-management\\\" routerLinkActive=\\\"active-link\\\">\\r\\n\\t\\t\\t<p-card header=\\\"Stock account\\\">\\r\\n\\t\\t\\t    <div>Stock accounts related management </div>\\r\\n\\t\\t\\t</p-card>\\r\\n\\t    </a>\\r\\n\\t</div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-xs-12\\\">\\r\\n\\t    <a routerLink=\\\"../transaction-management\\\" routerLinkActive=\\\"active-link\\\">\\t\\r\\n\\t\\t\\t<p-card header=\\\"Transaction\\\">\\r\\n\\t\\t\\t    <div>Transaction like deposit/withdraw management</div>\\r\\n\\t\\t\\t</p-card>\\r\\n\\t    </a>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-lg-3 col-md-6 col-xs-12\\\">\\r\\n\\t  <a routerLink=\\\"../clients-management\\\" routerLinkActive=\\\"active-link\\\">\\t\\r\\n\\t\\t\\t<p-card header=\\\"Logs\\\">\\r\\n\\t\\t\\t    <div>Recent logs</div>\\r\\n\\t\\t\\t</p-card>\\r\\n\\t  </a>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<form class=\\\"admin\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"login(f.form.valid)\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\t\\r\\n\\t<h2>Admin Login</h2>\\r\\n\\t\\r\\n\\t<input #email=\\\"ngModel\\\" \\r\\n\\t       type=\\\"email\\\" \\r\\n\\t       name=\\\"email\\\" \\r\\n\\t       [(ngModel)]=\\\"credentials.email\\\" \\r\\n\\t       placeholder=\\\"Email\\\" \\r\\n\\t       required email maxlength=\\\"256\\\" \\r\\n\\t       class=\\\"text-field\\\" />\\r\\n\\r\\n\\r\\n    <input #password=\\\"ngModel\\\" \\r\\n           type=\\\"password\\\" \\r\\n           name=\\\"password\\\" \\r\\n           [(ngModel)]=\\\"credentials.password\\\" \\r\\n           placeholder=\\\"Password\\\"\\r\\n           required maxlength=\\\"100\\\" \\r\\n           class=\\\"text-field\\\"/>\\r\\n\\r\\n    <a href=\\\"javascript:void(0)\\\">\\r\\n    \\t<input type=\\\"submit\\\"  class=\\\"button\\\" value=\\\"Log In\\\" />\\r\\n    </a>\\r\\n      <div class=\\\"validation-summary text-left\\\" *ngIf=\\\"error\\\">\\r\\n            {{error}}    \\r\\n    </div>\\r\\n</form>\"","export default \"<p-messages [(value)]=\\\"msgs\\\"></p-messages>\\r\\n<h2>Account Management</h2>\\r\\n<p-table [value]=\\\"accounts\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\" \\r\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [loading]=\\\"loading\\\" [rowsPerPageOptions]=\\\"pageSizeOptions\\\" [defaultSortOrder]=\\\"-1\\\" dataKey=\\\"id\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\" let-columns let-expanded=\\\"expanded\\\">\\r\\n        <tr>\\r\\n            <th style=\\\"width:3em\\\"></th>\\r\\n            <th style=\\\"width:2.5em\\\"></th>\\r\\n            <th style=\\\"width:10%\\\">ID</th>\\r\\n            <th>User ID</th>\\r\\n            <th>Type</th>\\r\\n            <th>Balance</th>\\r\\n            <th>Approved</th>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\"  let-expanded=\\\"expanded\\\">\\r\\n        <tr [pReorderableRow]=\\\"index\\\">\\r\\n          <td >\\r\\n            <a href=\\\"#\\\" [pRowToggler]=\\\"rowData\\\" (click)=\\\"getAccountInfo(!expanded, rowData.id)\\\" id=\\\"expandedID-{{rowData.id}}\\\">\\r\\n              <i [ngClass]=\\\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-bars\\\" pReorderableRowHandle></i>\\r\\n          </td>\\r\\n          <td>{{rowData.id}}</td>\\r\\n          <td>{{rowData.user_id}}</td>\\r\\n          <td>{{rowData.type}}</td>\\r\\n          <td>{{rowData.balance}}</td>\\r\\n          <td>{{rowData.approved_user_id}}</td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n        <tr>\\r\\n          <td [attr.colspan]=\\\"'7'\\\">\\r\\n                <div class=\\\"ui-g ui-fluid\\\" style=\\\"font-size:16px;padding:20px\\\">\\r\\n                    <div class=\\\"col-md-8\\\" *ngIf=\\\"accountInfo\\\">\\r\\n                      <p-fieldset legend=\\\"Account info\\\">\\r\\n                      <form #accountForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n                      <div class=\\\"tab-pane active\\\">\\r\\n                        <h4 class=\\\"head text-center\\\">Personal Information</h4>\\r\\n                        <br/>\\r\\n                        <div class='row'>\\r\\n                            <div class='col-md-12'>\\r\\n                                <div class=\\\"row\\\">\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"chineseName\\\">Chinese name</label>  \\r\\n                            <input  #chineseName=\\\"ngModel\\\" required id=\\\"chineseName\\\" name=\\\"chineseName\\\" type=\\\"text\\\" placeholder=\\\"Chinese name\\\" [(ngModel)]=\\\"accountInfo.name_chinese\\\" pInputText >   \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && chineseName.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"englishName\\\">English name</label>  \\r\\n                            <input #englishName=\\\"ngModel\\\" required id=\\\"englishName\\\" name=\\\"englishName\\\" type=\\\"text\\\" placeholder=\\\"English name\\\" [(ngModel)]=\\\"accountInfo.name_english\\\" pInputText>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && englishName.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"gender\\\">\\r\\n                            Gender</label>  \\r\\n                            <div class=\\\"group selectOtn\\\"> \\r\\n                                <select class=\\\"form-control\\\" required name=\\\"gender\\\" #gender=\\\"ngModel\\\" [(ngModel)]=\\\"accountInfo.gender_id\\\" required=\\\"true\\\">\\r\\n                                     <option class=\\\"option\\\" value=\\\"0\\\" disabled=\\\"true\\\" selected=\\\"true\\\">Select gender</option>\\r\\n                                    <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrGender')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && gender.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>  \\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"email\\\">Email</label>  \\r\\n                            <input #email=\\\"ngModel\\\" required id=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"accountInfo.email\\\" pInputText>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && email.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>                                      \\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"country\\\">Country/Region</label>\\r\\n                                <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\" required name=\\\"country\\\" #country=\\\"ngModel\\\" [(ngModel)]=\\\"accountInfo.identification_country_id\\\" required=\\\"true\\\">\\r\\n                                         <option class=\\\"option\\\" value=\\\"0\\\" disabled=\\\"true\\\" selected=\\\"true\\\">Select country</option>\\r\\n                                        <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrCountry')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            <div class=\\\"alert alert-danger\\\" \\r\\n                                  *ngIf=\\\"accountForm.submitted && country.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"identificationNumber\\\">\\r\\n                            Identification number</label>  \\r\\n                            <input #identificationNumber=\\\"ngModel\\\" required id=\\\"identificationNumber\\\" name=\\\"identificationNumber\\\" type=\\\"text\\\" placeholder=\\\"Indentification\\\" [(ngModel)]=\\\"accountInfo.identification_number\\\" pInputText>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && identificationNumber.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"highestEducation\\\">\\r\\n                            Highest Education</label>  \\r\\n                            <div class=\\\"group selectOtn\\\"> \\r\\n                                <select class=\\\"form-control\\\" required name=\\\"highestEducation\\\" #highestEducation=\\\"ngModel\\\" [(ngModel)]=\\\"accountInfo.highest_education_id\\\" required=\\\"true\\\">\\r\\n                                     <option class=\\\"option\\\" value=\\\"0\\\" disabled=\\\"true\\\" selected=\\\"true\\\">Select education</option>\\r\\n                                    <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrEducation')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && highestEducation.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"dob\\\">\\r\\n                            Date of birth</label>  \\r\\n                              <input type=\\\"date\\\" \\r\\n                                     id=\\\"dob\\\" \\r\\n                                     name=\\\"dob\\\" \\r\\n                                     #dob=\\\"ngModel\\\"\\r\\n                                     required\\r\\n                                     [(ngModel)]=\\\"accountInfo.dob\\\">\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && dob.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"dobPlace\\\">Birth place</label>\\r\\n                                <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\" required name=\\\"dobPlace\\\" #dobPlace=\\\"ngModel\\\" [(ngModel)]=\\\"accountInfo.place_of_birth_country_id\\\" required=\\\"true\\\">\\r\\n                                         <option class=\\\"option\\\" value=\\\"0\\\" disabled=\\\"true\\\" selected=\\\"true\\\">Select country</option>\\r\\n                                        <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrCountry')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            <div class=\\\"alert alert-danger\\\" \\r\\n                                  *ngIf=\\\"accountForm.submitted && dobPlace.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-md-12'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"address\\\">Address</label>\\r\\n                              <textarea rows=\\\"3\\\" id=\\\"address\\\" #address=\\\"ngModel\\\" cols=\\\"30\\\" name=\\\"address\\\" [(ngModel)]=\\\"accountInfo.address\\\" required=\\\"true\\\" autoResize=\\\"autoResize\\\" style=\\\"resize: none;width:100%;padding:10px\\\" placeholder=\\\"Address\\\"></textarea>\\r\\n                            <div class=\\\"alert alert-danger\\\" \\r\\n                                  *ngIf=\\\"accountForm.submitted && address.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"email\\\" style=\\\"margin-right: 35px\\\">Permanent residence</label>\\r\\n                    <div class=\\\"mr-2\\\" style=\\\"display: inline-block;\\\">\\r\\n                        <p-radioButton name=\\\"residence\\\" value=\\\"1\\\" label=\\\"Yes\\\" [(ngModel)]=\\\"accountInfo.is_permanent_resident\\\">\\r\\n                        </p-radioButton> \\r\\n                    </div>\\r\\n                   <div class=\\\"mr-2\\\" style=\\\"display: inline-block;\\\">\\r\\n                        <p-radioButton name=\\\"residence\\\" value=\\\"0\\\" [(ngModel)]=\\\"accountInfo.is_permanent_resident\\\" label=\\\"No\\\">\\r\\n                        </p-radioButton> \\r\\n                   </div>\\r\\n \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">Employment Status</h4>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-md-12'>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"professionalStatus\\\">\\r\\n                             Professional status</label> \\r\\n                                <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\" required name=\\\"professionalStatus\\\" #professionalStatus=\\\"ngModel\\\" [(ngModel)]=\\\"accountInfo.professional_status_id\\\" required=\\\"true\\\">\\r\\n                                         <option class=\\\"option\\\" value=\\\"0\\\" disabled=\\\"true\\\" selected=\\\"true\\\">Select status</option>\\r\\n                                        <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrProfessionalStatus')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && professionalStatus.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"companyName\\\">Company name</label>  \\r\\n                            <input #companyName=\\\"ngModel\\\" required id=\\\"companyName\\\" name=\\\"companyName\\\" type=\\\"text\\\" placeholder=\\\"Company name\\\" [(ngModel)]=\\\"accountInfo.company_name\\\" pInputText>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && companyName.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"carrerPosition\\\">\\r\\n                            Career position</label>  \\r\\n                            <input #carrerPosition=\\\"ngModel\\\" required id=\\\"carrerPosition\\\" name=\\\"carrerPosition\\\" type=\\\"text\\\" placeholder=\\\"Career position\\\" [(ngModel)]=\\\"accountInfo.career_position\\\" pInputText>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && carrerPosition.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"control-label\\\" for=\\\"bussinessNature\\\">\\r\\n                            Business nature</label>  \\r\\n                               <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\" required name=\\\"bussinessNature\\\" #bussinessNature=\\\"ngModel\\\" [(ngModel)]=\\\"accountInfo.business_nature_id\\\" required=\\\"true\\\">\\r\\n                                         <option class=\\\"option\\\" value=\\\"0\\\" disabled=\\\"true\\\" selected=\\\"true\\\">Select business nature</option>\\r\\n                                        <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrBusinessNature')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                                </div>          \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && bussinessNature.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">Financial and investment status</h4>\\r\\n        <br/>\\r\\n        <div class=\\\"row\\\">\\r\\n        <div class='col-md-12'>\\r\\n            <h6 class=\\\"subTitle\\\">Personal finances</h6>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class='row mt-3'>\\r\\n          <div class='col-md-12'>\\r\\n            <div class=\\\"row\\\">\\r\\n               <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"annualIncome\\\">\\r\\n                        Annual Income</label> \\r\\n                       <div class=\\\"group selectOtn\\\"> \\r\\n                          <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"annualIncome\\\"  \\r\\n                                    required \\r\\n                                    name=\\\"annualIncome\\\" \\r\\n                                    #annualIncome=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"accountInfo.annual_income_id\\\" \\r\\n                                    >\\r\\n                            <option class=\\\"option\\\" \\r\\n                                     value=\\\"0\\\" \\r\\n                                     disabled=\\\"true\\\" \\r\\n                                     >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrAnnualIncome')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                         </select>\\r\\n                        </div>             \\r\\n                         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && annualIncome.invalid\\\">*Required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"totalNetAssets\\\">\\r\\n                        Total net asset value</label> \\r\\n                       <div class=\\\"group selectOtn\\\"> \\r\\n                          <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"totalNetAssets\\\"  \\r\\n                                    required \\r\\n                                    name=\\\"totalNetAssets\\\" \\r\\n                                    #totalNetAssets=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"accountInfo.total_net_asset_value_id\\\" \\r\\n                                    >\\r\\n                            <option class=\\\"option\\\" \\r\\n                                     value=\\\"0\\\" \\r\\n                                     disabled=\\\"true\\\" \\r\\n                                     >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrTotalNetAssetValue')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                         </select>\\r\\n                        </div>             \\r\\n                         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && totalNetAssets.invalid\\\">*Required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"sourceOfFunds\\\">\\r\\n                        Sources of funds</label> \\r\\n                     <div class=\\\"form-group accountForm\\\">\\r\\n                     <p-checkbox name=\\\"disclosure\\\" *ngFor=\\\"let item of lookupSvc.getAttributeValues('attrSourcesOfFund')\\\" \\r\\n                     [value]=\\\"item.id\\\" [label]=\\\"item.name\\\" (onChange)=\\\"accountInfo.sources_of_found_ids=sourceOfFunds.toString()\\\" [(ngModel)]=\\\"sourceOfFunds\\\"></p-checkbox>\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && sourceOfFunds.length==0\\\">*Required</div>\\r\\n                   </div>            \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"investmentKnowledge\\\">\\r\\n                        Investment knowledge</label> \\r\\n                       <div class=\\\"group selectOtn\\\"> \\r\\n                          <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"investmentKnowledge\\\"  \\r\\n                                    required \\r\\n                                    name=\\\"investmentKnowledge\\\" \\r\\n                                    #investmentKnowledge=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"accountInfo.investment_knowledge_id\\\" \\r\\n                                    >\\r\\n                            <option class=\\\"option\\\" \\r\\n                                     value=\\\"0\\\" \\r\\n                                     disabled=\\\"true\\\" \\r\\n                                     >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrInvestmentKnowledge')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                         </select>\\r\\n                        </div>             \\r\\n                         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && investmentKnowledge.invalid\\\">*Required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"investmentObjective\\\">\\r\\n                        Investment objective</label> \\r\\n                       <div class=\\\"group selectOtn\\\"> \\r\\n                          <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"investmentObjective\\\"  \\r\\n                                    required \\r\\n                                    name=\\\"investmentObjective\\\" \\r\\n                                    #investmentObjective=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"accountInfo.investment_objective_id\\\" \\r\\n                                    >\\r\\n                            <option class=\\\"option\\\" \\r\\n                                     value=\\\"0\\\" \\r\\n                                     disabled=\\\"true\\\" \\r\\n                                     >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrInvestmentObjective')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                         </select>\\r\\n                        </div>             \\r\\n                         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && investmentObjective.invalid\\\">*Required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"frequencyOfTransaction\\\">\\r\\n                        Frequency of transaction per month</label> \\r\\n                       <div class=\\\"group selectOtn\\\"> \\r\\n                          <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"frequencyOfTransaction\\\"  \\r\\n                                    required \\r\\n                                    name=\\\"frequencyOfTransaction\\\" \\r\\n                                    #frequencyOfTransaction=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"accountInfo.frequency_of_transactions_per_month_id\\\" \\r\\n                                    >\\r\\n                            <option class=\\\"option\\\" \\r\\n                                     value=\\\"0\\\" \\r\\n                                     disabled=\\\"true\\\" \\r\\n                                     >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrFrequencyOfTransactions')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                         </select>\\r\\n                        </div>             \\r\\n                         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && frequencyOfTransaction.invalid\\\">*Required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               <div class='col-xs-12 col-sm-6'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"riskTolerance\\\">\\r\\n                        Risk of tolerance</label> \\r\\n                       <div class=\\\"group selectOtn\\\"> \\r\\n                          <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"riskTolerance\\\"  \\r\\n                                    required \\r\\n                                    name=\\\"riskTolerance\\\" \\r\\n                                    #riskTolerance=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"accountInfo.risk_tolerance_id\\\" \\r\\n                                    >\\r\\n                            <option class=\\\"option\\\" \\r\\n                                     value=\\\"0\\\" \\r\\n                                     disabled=\\\"true\\\" \\r\\n                                     >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrRiskTolerance')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                         </select>\\r\\n                        </div>             \\r\\n                         <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && riskTolerance.invalid\\\">*Required</div>\\r\\n                    </div>\\r\\n                </div>                                                                                               \\r\\n               </div>\\r\\n             </div> \\r\\n        </div>  \\r\\n        <div class=\\\"row mt-3\\\">\\r\\n        <div class='col-md-12'>\\r\\n            <h6 class=\\\"subTitle\\\">Investment experience</h6>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class='row mt-3'>\\r\\n            <div class='col-md-12'>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"stock\\\">\\r\\n                             Stock</label> \\r\\n                               <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\"\\r\\n                                            id=\\\"stock\\\"  \\r\\n                                            required \\r\\n                                            name=\\\"stock\\\" \\r\\n                                            #stock=\\\"ngModel\\\" \\r\\n                                            [(ngModel)]=\\\"accountInfo.stock_experience_id\\\" \\r\\n                                            >\\r\\n                                         <option class=\\\"option\\\" \\r\\n                                                 value=\\\"0\\\" \\r\\n                                                 disabled=\\\"true\\\" \\r\\n                                                 >Select</option>\\r\\n                                         <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrExperience')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                               </div>             \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && stock.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                         <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"structuredProduct\\\">\\r\\n                             Structured product</label> \\r\\n                                <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\" \\r\\n                                            id=\\\"structuredProduct\\\" \\r\\n                                            required \\r\\n                                            name=\\\"structuredProduct\\\" \\r\\n                                            #structuredProduct=\\\"ngModel\\\" \\r\\n                                            [(ngModel)]=\\\"accountInfo.structured_product_experience_id\\\" \\r\\n                                            >\\r\\n                                         <option class=\\\"option\\\" \\r\\n                                                 value=\\\"0\\\" \\r\\n                                                 disabled=\\\"true\\\" \\r\\n                                                 >Select</option>\\r\\n                                         <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrExperience')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                               </div>              \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && structuredProduct.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"foreignCurrency\\\">\\r\\n                             Foreign currency/Gold</label> \\r\\n                                <div class=\\\"group selectOtn\\\"> \\r\\n                                    <select class=\\\"form-control\\\" \\r\\n                                            id=\\\"foreignCurrency\\\" \\r\\n                                            required \\r\\n                                            name=\\\"foreignCurrency\\\" \\r\\n                                            #foreignCurrency=\\\"ngModel\\\" \\r\\n                                            [(ngModel)]=\\\"accountInfo.foreign_currency_gold_experience_id\\\" \\r\\n                                            >\\r\\n                                         <option class=\\\"option\\\" \\r\\n                                                 value=\\\"0\\\" \\r\\n                                                 disabled=\\\"true\\\" \\r\\n                                                 >Select</option>\\r\\n                                         <option class=\\\"option\\\"\\r\\n                                            *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrExperience')\\\"\\r\\n                                            [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                    </select>\\r\\n                               </div>             \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && foreignCurrency.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"warrants\\\">\\r\\n                             Warrants</label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"warrants\\\" \\r\\n                                        required \\r\\n                                        name=\\\"warrants\\\" \\r\\n                                        #warrants=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.warrants_experience_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrExperience')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div> \\r\\n\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && warrants.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  <div class='col-xs-12 col-sm-6'>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                           <label class=\\\"control-label\\\" for=\\\"futures\\\">\\r\\n                             Futures/Options</label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"futures\\\" \\r\\n                                        required \\r\\n                                        name=\\\"futures\\\" \\r\\n                                        #futures=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.futures_options_experience_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrExperience')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div>          \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && futures.invalid\\\">*Required</div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class='col-xs-12 col-sm-6'>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                           <label class=\\\"control-label\\\" for=\\\"other\\\">\\r\\n                             Other</label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"other\\\" \\r\\n                                        required \\r\\n                                        name=\\\"other\\\" \\r\\n                                        #other=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.other_experience_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrExperience')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div>          \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && other.invalid\\\">*Required</div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                  <div class=\\\"row mb-3\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <span style=\\\"color: #949494;\\\">Derivatives Warrants / CBBCs / ETF / Options, etc.) Cognitive Evaluation</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                   <div class='col-xs-12 col-sm-6'>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                           <label class=\\\"control-label\\\" for=\\\"derivativesTrading\\\">\\r\\n                             Derivatives trading</label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"derivativesTrading\\\" \\r\\n                                        required \\r\\n                                        name=\\\"derivativesTrading\\\" \\r\\n                                        #derivativesTrading=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.derivatives_trading_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrDerivativesTrading')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div>           \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && derivativesTrading.invalid\\\">*Required</div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">Other Information</h4>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-md-12'>\\r\\n               <div class=\\\"row mb-3\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                   <h6 class=\\\"subTitle\\\">Other information disclosure</h6>\\r\\n                  </div>\\r\\n                </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                 <div class='col-md-12'>\\r\\n                  <div class=\\\"form-group accountForm\\\">\\r\\n                     <p-checkbox name=\\\"disclosure\\\" *ngFor=\\\"let item of lookupSvc.getAttributeValues('attrTaxInformation')\\\" \\r\\n                     [value]=\\\"item.id\\\" [label]=\\\"item.name\\\" (onChange)=\\\"accountInfo.other_information_disclosure_ids=selectedDisclosureValues.toString()\\\" [(ngModel)]=\\\"selectedDisclosureValues\\\"></p-checkbox>\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && selectedDisclosureValues.length==0\\\">*Required</div>\\r\\n                   </div>\\r\\n                </div>\\r\\n              </div>\\r\\n                <div class=\\\"row mb-3\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <h6 class=\\\"subTitle\\\">Tax Information</h6>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"taxInformation\\\">\\r\\n                             Tax information</label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"taxInformation\\\" \\r\\n                                        required \\r\\n                                        name=\\\"taxInformation\\\" \\r\\n                                        #taxInformation=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.tax_information_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrTaxInformation')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div>            \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && taxInformation.invalid\\\">*Required</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class='col-xs-12 col-sm-6'>\\r\\n                       <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"taxCountry\\\">\\r\\n                             Country / region </label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"taxCountry\\\" \\r\\n                                        required \\r\\n                                        name=\\\"taxCountry\\\" \\r\\n                                        #taxCountry=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.tax_country_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrCountry')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div> \\r\\n\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && taxCountry.invalid\\\">*Required</div>\\r\\n                        </div> \\r\\n                      </div>\\r\\n                       <div class='col-xs-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"taxId\\\">\\r\\n                             Tax ID </label> \\r\\n                                <input #taxId=\\\"ngModel\\\" required id=\\\"taxId\\\" name=\\\"taxId\\\" type=\\\"text\\\" placeholder=\\\"Tax ID\\\" [(ngModel)]=\\\"accountInfo.tax_id\\\" pInputText>\\r\\n\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && taxId.invalid\\\">*Required</div>\\r\\n                        </div> \\r\\n                      </div> \\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                <div class='col-md-12'>\\r\\n                  <p style=\\\"color: #949494;\\\">A tax resident is a tax resident in a certain place because he has a resident status in a certain place and is responsible for paying taxes locally.</p>\\r\\n                </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                <div class='col-md-12'>\\r\\n                    <h6 class=\\\"subTitle\\\">W-8BEN</h6>\\r\\n                </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-xs-12 col-sm-6'>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"w8benCountry\\\">\\r\\n                             Country / region </label> \\r\\n                              <div class=\\\"group selectOtn\\\"> \\r\\n                                 <select class=\\\"form-control\\\" \\r\\n                                        id=\\\"w8benCountry\\\" \\r\\n                                        required \\r\\n                                        name=\\\"w8benCountry\\\" \\r\\n                                        #w8benCountry=\\\"ngModel\\\" \\r\\n                                        [(ngModel)]=\\\"accountInfo.w8ben_country_id\\\" \\r\\n                                        >\\r\\n                                     <option class=\\\"option\\\" \\r\\n                                             value=\\\"0\\\" \\r\\n                                             disabled=\\\"true\\\" \\r\\n                                             >Select</option>\\r\\n                                     <option class=\\\"option\\\"\\r\\n                                        *ngFor=\\\"let g of lookupSvc.getAttributeValues('attrCountry')\\\"\\r\\n                                        [ngValue]=\\\"g.id\\\" >{{g.name}}</option>\\r\\n                                 </select>\\r\\n                              </div>          \\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && w8benCountry.invalid\\\">*Required</div>\\r\\n                        </div> \\r\\n                      </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                <div class='col-md-12'>\\r\\n                  <p style=\\\"color: #949494;\\\">Your country or territory is within the meaning of the income tax agreement between the United States and that country.</p>\\r\\n                </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">Account to open</h4>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-md-12'>\\r\\n              <div class=\\\"row\\\">\\r\\n                 <div class='col-md-12'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                       <label class=\\\"control-label\\\" for=\\\"securitiesAccount\\\">\\r\\n                     Securities account</label> \\r\\n                     <p-checkbox name=\\\"securitiesAccount\\\" *ngFor=\\\"let item of lookupSvc.getAttributeValues('attrSecuritiesAccount')\\\" \\r\\n                     [value]=\\\"item.id\\\" [label]=\\\"item.name\\\" [(ngModel)]=\\\"selectedSecuritiesAccount\\\" (onChange)=\\\"accountInfo.securities_account_ids=selectedSecuritiesAccount.toString()\\\" ></p-checkbox>\\r\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && selectedSecuritiesAccount.length==0\\\">*Required</div>\\r\\n                   </div>\\r\\n                </div>\\r\\n              </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-md-12'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                             <label class=\\\"control-label\\\" for=\\\"fundAccount\\\">\\r\\n                             Fund account</label> \\r\\n                              <p-checkbox name=\\\"fundAccount\\\" *ngFor=\\\"let item of lookupSvc.getAttributeValues('attrFoundAccount')\\\" \\r\\n                               [value]=\\\"item.id\\\" [label]=\\\"item.name\\\" [(ngModel)]=\\\"selectedFundAccount\\\" (onChange)=\\\"accountInfo.found_account_ids=selectedFundAccount.toString()\\\"></p-checkbox>\\r\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"accountForm.submitted && selectedFundAccount.length==0\\\">*Required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"showSaveErrored\\\">\\r\\n                      <div class='col-md-12'>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                           <div class=\\\"alert alert-danger\\\">\\r\\n                              <div *ngIf=\\\"errors.length > 0 then errorList else errorGeneric\\\"></div>\\r\\n\\r\\n                              <ng-template #errorList>\\r\\n                                  <ul>\\r\\n                                      <li *ngFor=\\\"let error of errors\\\">{{error}}</li>\\r\\n                                  </ul>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template #errorGeneric>\\r\\n                                  <li *ngFor=\\\"let error of errors\\\">{{error}}</li>\\r\\n                              </ng-template>\\r\\n                          </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                    <button class=\\\"primary\\\"  (click)=\\\"submitForm(accountForm)\\\"> Update <span style=\\\"margin-left:10px;\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</p-fieldset>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\" *ngIf=\\\"account\\\">\\r\\n                      <p-fieldset legend=\\\"Account\\\">\\r\\n                     <div class=\\\"row\\\" >\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                          <p>Approved</p>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"accountComplete\\\" \\r\\n                                   id=\\\"accountComplete-1\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"1\\\"\\r\\n                                   [checked] = \\\"account.approved == 1\\\"\\r\\n                                   (change)=\\\"account.approved = 1\\\"/>\\r\\n                          <label for=\\\"accountComplete-1\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Yes\\r\\n                          </label>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"accountComplete\\\" \\r\\n                                   id=\\\"accountComplete-2\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"0\\\"\\r\\n                                   [checked] = \\\"account.approved == 0\\\"\\r\\n                                   (change)=\\\"account.approved = 0\\\"\\r\\n                                    />\\r\\n                          <label for=\\\"accountComplete-2\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>No\\r\\n                          </label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                     <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-\\\">\\r\\n                           <button type=\\\"button\\\" \\r\\n                               class=\\\"primary\\\" (click)=\\\"updateAccount()\\\">Update</button>\\r\\n                          </div>                        \\r\\n                        </div>\\r\\n                      </p-fieldset>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n</p-table>\\r\\n\\r\\n\"","export default \"<h2>Profile Management</h2>\\r\\n<p-messages [(value)]=\\\"msgs\\\"></p-messages>\\r\\n<p-table  [value]=\\\"users\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\" \\r\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [loading]=\\\"loading\\\" [rowsPerPageOptions]=\\\"pageSizeOptions\\\" [defaultSortOrder]=\\\"-1\\\" dataKey=\\\"id\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\" let-columns let-expanded=\\\"expanded\\\">\\r\\n        <tr>\\r\\n            <th style=\\\"width:3em\\\"></th>\\r\\n            <th style=\\\"width:2.5em\\\"></th>\\r\\n            <th style=\\\"width:10%\\\">ID</th>\\r\\n            <th>English name</th>\\r\\n            <th>Chinese name</th>\\r\\n            <th style=\\\"width:30%\\\">Email</th>\\r\\n            <th>Created</th>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\"  let-expanded=\\\"expanded\\\">\\r\\n        <tr [pReorderableRow]=\\\"index\\\">\\r\\n          <td >\\r\\n            <a href=\\\"#\\\" [pRowToggler]=\\\"rowData\\\"  (click)=\\\"toggleExpand(!expanded, rowData.id)\\\" id=\\\"expandedID-{{rowData.id}}\\\">\\r\\n              <i [ngClass]=\\\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-bars\\\" pReorderableRowHandle></i>\\r\\n          </td>\\r\\n          <td>{{rowData.id}}</td>\\r\\n          <td>{{rowData.name_english}}</td>\\r\\n          <td>{{rowData.name_chinese}}</td>\\r\\n          <td>{{rowData.email}}</td>\\r\\n          <td>{{rowData.create_time}}</td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n        <tr>\\r\\n          <td [attr.colspan]=\\\"'7'\\\">\\r\\n                <div class=\\\"container\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-12\\\">\\r\\n                      <p-fieldset [legend]=\\\"rowData.email\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-5 col-md-6 col-xs-12\\\">\\r\\n                          <p>Verified Email</p>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"emailVerified{{rowData.id}}\\\" \\r\\n                                   id=\\\"emailVerified-1-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"1\\\"\\r\\n                                   [checked] = \\\"rowData.verified_email == 1\\\"\\r\\n                                   (change)=\\\"rowData.verified_email = 1\\\"/>\\r\\n                          <label for=\\\"emailVerified-1-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Varified\\r\\n                          </label>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"emailVerified{{rowData.id}}\\\" \\r\\n                                   id=\\\"emailVerified-2-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"0\\\"\\r\\n                                   [checked] = \\\"rowData.verified_email == 0\\\"\\r\\n                                   (change)=\\\"rowData.verified_email = 0\\\"\\r\\n                                    />\\r\\n                          <label for=\\\"emailVerified-2-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Not verified\\r\\n                          </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-5 col-md-6 col-xs-12\\\">\\r\\n                          <p>Verified Identity <a href=\\\"javascript:void(0)\\\" (click)=\\\"openDocument(rowData.docs)\\\"> (view document)</a></p>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"verified_identity{{rowData.id}}\\\" \\r\\n                                   id=\\\"verified_identity-1-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"1\\\"\\r\\n                                   [checked] = \\\"rowData.verified_identity == 1\\\"\\r\\n                                   (change)=\\\"rowData.verified_identity = 1\\\"/>\\r\\n                          <label for=\\\"verified_identity-1-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Varified\\r\\n                          </label>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"verified_identity{{rowData.id}}\\\" \\r\\n                                   id=\\\"verified_identity-2-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"0\\\"\\r\\n                                   [checked] = \\\"rowData.verified_identity == 0\\\"\\r\\n                                   (change)=\\\"rowData.verified_identity = 0\\\"\\r\\n                                    />\\r\\n                          <label for=\\\"verified_identity-2-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Not verified\\r\\n                          </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-5 col-md-6 col-xs-12\\\">\\r\\n                          <p>Verified Mobile</p>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"verified_mobile{{rowData.id}}\\\" \\r\\n                                   id=\\\"verified_mobile-1-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"1\\\"\\r\\n                                   [checked] = \\\"rowData.verified_mobile == 1\\\"\\r\\n                                   (change)=\\\"rowData.verified_mobile = 1\\\"/>\\r\\n                          <label for=\\\"verified_mobile-1-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Varified\\r\\n                          </label>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"verified_mobile{{rowData.id}}\\\" \\r\\n                                   id=\\\"verified_mobile-2-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"0\\\"\\r\\n                                   [checked] = \\\"rowData.verified_mobile == 0\\\"\\r\\n                                   (change)=\\\"rowData.verified_mobile = 0\\\"\\r\\n                                    />\\r\\n                          <label for=\\\"verified_mobile-2-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Not verified\\r\\n                          </label>\\r\\n                        </div> \\r\\n                        <div class=\\\"col-lg-5 col-md-6 col-xs-12\\\">\\r\\n                          <p>Verified Address</p>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"verified_address{{rowData.id}}\\\" \\r\\n                                   id=\\\"verified_address-1-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"1\\\"\\r\\n                                   [checked] = \\\"rowData.verified_address == 1\\\"\\r\\n                                   (change)=\\\"rowData.verified_address = 1\\\"/>\\r\\n                          <label for=\\\"verified_address-1-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Varified\\r\\n                          </label>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"verified_address{{rowData.id}}\\\" \\r\\n                                   id=\\\"verified_address-2-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"0\\\"\\r\\n                                   [checked] = \\\"rowData.verified_address == 0\\\"\\r\\n                                   (change)=\\\"rowData.verified_address = 0\\\"\\r\\n                                    />\\r\\n                          <label for=\\\"verified_address-2-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Not verified\\r\\n                          </label>\\r\\n                        </div>   \\r\\n                        <div class=\\\"col-lg-5 col-md-6 col-xs-12\\\">\\r\\n                          <p>Account</p>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"active{{rowData.id}}\\\" \\r\\n                                   id=\\\"active-1-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"1\\\"\\r\\n                                   [checked] = \\\"rowData.active == 1\\\"\\r\\n                                   (change)=\\\"rowData.active = 1\\\"/>\\r\\n                          <label for=\\\"active-1-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>Active\\r\\n                          </label>\\r\\n                          <input type=\\\"radio\\\" \\r\\n                                   name=\\\"active{{rowData.id}}\\\" \\r\\n                                   id=\\\"active-2-{{rowData.id}}\\\" \\r\\n                                   class=\\\"radio-button\\\"\\r\\n                                   value=\\\"0\\\"\\r\\n                                   [checked] = \\\"rowData.active == 0\\\"\\r\\n                                   (change)=\\\"rowData.active = 0\\\"\\r\\n                                    />\\r\\n                          <label for=\\\"active-2-{{rowData.id}}\\\" \\r\\n                                 class=\\\"radio-button-click-target\\\">\\r\\n                            <span class=\\\"radio-button-circle\\\"></span>De-active\\r\\n                          </label>\\r\\n                        </div> \\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-\\\">\\r\\n                           <button type=\\\"button\\\" \\r\\n                               class=\\\"primary\\\" (click)=\\\"updateUser(rowData)\\\">Update</button>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-4\\\">\\r\\n                           <button type=\\\"button\\\" \\r\\n                               class=\\\"danger\\\" (click)=\\\"deleteUser(rowData.id)\\\">Delete user</button>\\r\\n                          </div>                          \\r\\n                        </div>\\r\\n                    </p-fieldset>\\r\\n                   </div>\\r\\n                  </div>\\r\\n                    </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n</p-table>\\r\\n\\r\\n\\r\\n\"","export default \"<h2>Transaction Management</h2>\\r\\n<p-table [value]=\\\"transactions\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"loadCarsLazy($event)\\\" \\r\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [loading]=\\\"loading\\\" [rowsPerPageOptions]=\\\"pageSizeOptions\\\" [defaultSortOrder]=\\\"-1\\\" dataKey=\\\"id\\\">\\r\\n    <ng-template pTemplate=\\\"header\\\" let-columns let-expanded=\\\"expanded\\\">\\r\\n        <tr>\\r\\n            <th style=\\\"width:3em\\\"></th>\\r\\n            <th style=\\\"width:2.5em\\\"></th>\\r\\n            <th style=\\\"width:10%\\\">ID</th>\\r\\n            <th>Type</th>\\r\\n            <th>Currency</th>\\r\\n            <th>Amount</th>\\r\\n            <th>Status</th>\\r\\n            <th>Date</th>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-index=\\\"rowIndex\\\"  let-expanded=\\\"expanded\\\">\\r\\n        <tr [pReorderableRow]=\\\"index\\\">\\r\\n          <td >\\r\\n            <a href=\\\"#\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n              <i [ngClass]=\\\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-bars\\\" pReorderableRowHandle></i>\\r\\n          </td>\\r\\n          <td>{{rowData.id}}</td>\\r\\n          <td>{{rowData.type}}</td>\\r\\n          <td>{{rowData.currency}}</td>\\r\\n          <td>{{rowData.amount}}</td>\\r\\n          <td>{{rowData.status}}</td>\\r\\n          <td>{{rowData.success_time}}</td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n    <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n        <tr>\\r\\n          <td [attr.colspan]=\\\"'8'\\\">\\r\\n                <div class=\\\"ui-g ui-fluid\\\" style=\\\"font-size:16px;padding:20px\\\">\\r\\n                    <div class=\\\"ui-g-12 ui-md-3\\\" style=\\\"text-align:center\\\">\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-12 ui-md-9\\\">\\r\\n                        <div class=\\\"ui-g\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </ng-template>\\r\\n</p-table>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ISubscription } from 'rxjs/Subscription';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { SiteApiResponseUtilities } from '../shared/services/SiteApiResponse';\r\nexport class BaseAdminComponent implements OnInit, OnDestroy {\r\n    \r\n    private respUtils = new SiteApiResponseUtilities();\r\n    public errors: string[];\r\n    public msgs: any[] = [];\r\n    private routerSub: ISubscription;\r\n\r\n        constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router\r\n        ) {\r\n\r\n        this.routerSub = this.router.events.subscribe(\r\n            () => window.scrollTo(0, 0)\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n     \r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.routerSub) {\r\n            this.routerSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onError(error) {\r\n        const errors = this.respUtils.getErrors(error);\r\n\r\n        if (errors.length === 0) {\r\n            errors.push(\"An unknown error occurred. Please try again.\");\r\n        }\r\n\r\n        this.errors = errors;\r\n        console.log(this.errors);\r\n    }\r\n\r\n    onSuccess(){\r\n        this.errors = [];\r\n        this.msgs = [];\r\n        this.msgs.push({severity:'success', summary:'Success Message', detail:'updated successfully.'});\r\n    }\r\n\r\n    onRequestFailed(){\r\n        this.msgs = [];\r\n        this.msgs.push({severity:'error', summary:'Error Message', detail:this.errors.toString()});\r\n    }\r\n  \r\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminGuard } from './admin.guard';\r\n\r\nimport { AdminComponent } from './admin.component';\r\n\r\nimport { AdminLoginComponent } from './login/admin-login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ManageClientsComponent } from './manage-client/manage-client.component';\r\nimport { ManageTransactionComponent } from './manage-transaction/manage-transaction.component';\r\nimport { ManageAccountComponent } from './manage-account/manage-account.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: AdminLoginComponent },\r\n    { path:'', component: AdminComponent, canLoad: [AdminGuard],\r\n      canActivate: [AdminGuard],   \r\n        children: [{\r\n            path: '',\r\n            children: [\r\n            { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n            {  path: 'dashboard', component: DashboardComponent },\r\n            {  path: 'clients-management', component: ManageClientsComponent },\r\n            { path: 'account-management', component: ManageAccountComponent },\r\n            {  path: 'transaction-management', component: ManageTransactionComponent }\r\n            ]\r\n        }] \r\n    }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule{\r\n\r\n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n    selector: 'admin',\r\n    templateUrl: './admin.component.html',\r\n    styleUrls: ['./styles/layout.less']\r\n})\r\nexport class AdminComponent{\r\n\t  constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router\r\n        ) {}\r\n\tlogout(){\r\n    //this.authSvc.logout();\r\n    localStorage.clear();\r\n    this.router.navigate(['/admin/login']);\r\n\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, CanLoad, Route } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n    constructor(\r\n        private authSvc: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    canActivate() {\r\n        if (this.authSvc.isLoggedIn  && this.authSvc.accountType == 'admin') {\r\n            return true;\r\n        }\r\n        this.router.navigate(['/admin/login']);\r\n        return false;\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AdminGuard } from './admin.guard';\r\n\r\nimport { AdminLoginComponent } from './login/admin-login.component';\r\nimport { AdminComponent } from './admin.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ManageClientsComponent } from './manage-client/manage-client.component';\r\nimport { ManageTransactionComponent } from './manage-transaction/manage-transaction.component';\r\nimport { ManageAccountComponent } from './manage-account/manage-account.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { AdminService } from './services/admin.service';\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    AdminLoginComponent,\r\n    DashboardComponent,\r\n    ManageClientsComponent,\r\n    ManageTransactionComponent,\r\n    ManageAccountComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AdminRoutingModule,\r\n    SharedModule\r\n  ],\r\n  exports: [AdminComponent],\r\n  providers: [AdminGuard, AdminService]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, ChangeDetectorRef } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { BaseAdminComponent } from '../BaseAdminComponent';\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['../styles/common.less']\r\n})\r\nexport class DashboardComponent extends BaseAdminComponent{\r\n   public users: any[] = [];\r\n   public totalRecords: number = 0;\r\n   constructor(\r\n  \troute: ActivatedRoute,\r\n    router: Router,\r\n   \tprivate adminSvc: AdminService,\r\n   \tprivate ref: ChangeDetectorRef){\r\n    super(route, router);\r\n   }\r\n\r\n   ngOnInit(){\r\n   \t  this.adminSvc.getProfileList().subscribe((res)=>{\r\n\t    this.users = res['list'];\r\n\t    this.totalRecords = this.users.length;\r\n\t    this.ref.detectChanges();\r\n\t\t    }, err => {\r\n\t\t   this.onError(err);\r\n\t\t});\r\n   }\r\n}","import { Component, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { Credentials } from './modal';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthService, AuthResult } from '../../auth/auth.service';\r\n\r\nimport { ProgressLoadingService } from '../../shared/services/loading-response-progress.service';\r\nimport { SiteApiResponseUtilities } from '../../shared/services/SiteApiResponse';\r\n@Component({\r\n    selector: 'admin-login',\r\n    templateUrl: './admin-login.component.html',\r\n    styleUrls: ['./style.less']\r\n})\r\nexport class AdminLoginComponent {\r\n\t private respUtils = new SiteApiResponseUtilities();\r\n\t public errors: string[];\r\n\t public submitted: boolean;\r\n\t error: string = '';\r\n\t credentials: Credentials = new Credentials();\r\n\t      constructor (\r\n\t        private route: ActivatedRoute,\r\n\t        private router: Router,\r\n\t        private authService: AuthService,\r\n\t        private responseProgress: ProgressLoadingService\r\n\t    ) {\r\n\t    }\r\n\r\n  login(valid: boolean) {\r\n   this.submitted = true;\r\n    if (!valid) return;  \r\n    this.responseProgress.progressResponse(true);\r\n    this.authService\r\n      .login(this.credentials).subscribe\r\n            (\r\n            r => this.onLogin(r),\r\n            e => {\r\n            this.onError(e)\r\n            this.responseProgress.progressResponse(false);\r\n            }\r\n            );\r\n  }\r\n\r\n  private onLogin(result: AuthResult): void {\r\n    this.submitted = false;\r\n\r\n    if (result == AuthResult.Success) {\r\n      this.error = null;\r\n      this.router.navigate(['admin']);\r\n\r\n    }\r\n    else if (result == AuthResult.ServerOffline) {\r\n      this.error = \"The server is offline. Please try again later.\";\r\n    }\r\n    else if (result == AuthResult.InvalidCredentials) {\r\n      this.error = \"The username or password is incorrect.\";\r\n    }\r\n    setTimeout(()=>{\r\n    this.responseProgress.progressResponse(false);\r\n    },500);\r\n\r\n\r\n  }\r\n\r\n  private onError(error) {\r\n        const errors = this.respUtils.getErrors(error);\r\n\r\n        if (errors.length === 0) {\r\n            errors.push(\"An unknown error occurred. Please try again.\");\r\n        }\r\n\r\n        this.errors = errors;\r\n        console.log(this.errors);\r\n    }\r\n}\r\n","\r\nexport class Credentials {\r\n        public email?: string;\r\n        public password?: string;\r\n        public type?: string\r\n    constructor () {\r\n          this.type = 'admin';\r\n    }\r\n}","export default \"form.admin {\\n  width: 280px;\\n  height: 260px;\\n  margin: 200px auto;\\n  background: white;\\n  border-radius: 3px;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\\n  text-align: center;\\n  padding-top: 1px;\\n}\\nform.admin .text-field {\\n  border: 1px solid #a6a6a6;\\n  width: 230px;\\n  height: 40px;\\n  border-radius: 3px;\\n  margin-top: 10px;\\n  padding-left: 10px;\\n  color: #6c6c6c;\\n  background: #fcfcfc;\\n  outline: none;\\n}\\nform.admin input.ng-dirty.ng-invalid.ng-touched {\\n  border: 1px solid #8e0606 !important;\\n}\\nform.admin .text-field:focus {\\n  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);\\n  color: #a6a6a6;\\n  background: white;\\n}\\nform.admin .button {\\n  border-radius: 3px;\\n  border: 1px solid #2a3542;\\n  box-shadow: inset 0 1px 0 #2a3542;\\n  width: 242px;\\n  height: 40px;\\n  margin-top: 20px;\\n  background: #2a3542;\\n  cursor: pointer;\\n  color: white;\\n  font-weight: bold;\\n  text-shadow: 0 -1px 0 #2a3542;\\n  font-size: 13px;\\n}\\nform.admin .button:hover {\\n  background: #2a3542e0;\\n}\\nform.admin .button:active {\\n  background: #2a3542e0;\\n  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3), 0 1px 0 white;\\n}\\nform.admin h2 {\\n  padding: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZG1pbi9sb2dpbi9EOi9Qcm9qZWN0cy9wYXJ0bmVyL2dyYW5kLXBhcnRuZXJzLXdlYi9zcmMvYWRtaW4vbG9naW4vc3R5bGUubGVzcyIsInNyYy9hZG1pbi9sb2dpbi9zdHlsZS5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0MsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSx1Q0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUNBRDtBRFJBO0VBV0MseUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUNBRDtBRG5CQTtFQXVCSyxvQ0FBQTtBQ0RMO0FEdEJBO0VBMkJDLDRDQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FDRkQ7QUQzQkE7RUFpQ0Msa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUVBLG1CQUFBO0VBRUEsZUFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLDZCQUFBO0VBRUEsZUFBQTtBQ05EO0FEekNBO0VBa0RNLHFCQUFBO0FDTk47QUQ1Q0E7RUFxREUscUJBQUE7RUFFRCwyREFBQTtBQ1BEO0FEaERBO0VBMkRLLGFBQUE7QUNSTCIsImZpbGUiOiJzcmMvYWRtaW4vbG9naW4vc3R5bGUubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuZm9ybS5hZG1pbiB7XG5cdHdpZHRoOiAyODBweDtcblx0aGVpZ2h0OiAyNjBweDtcblx0bWFyZ2luOiAyMDBweCBhdXRvO1xuXHRiYWNrZ3JvdW5kOiB3aGl0ZTtcblx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsMCwwLCAuNCk7IFxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHBhZGRpbmctdG9wOiAxcHg7XG4gIFxuICAgLnRleHQtZmllbGQge1x0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCBcblx0Ym9yZGVyOiAxcHggc29saWQgI2E2YTZhNjtcblx0d2lkdGg6IDIzMHB4O1xuXHRoZWlnaHQ6IDQwcHg7XG5cdGJvcmRlci1yYWRpdXM6IDNweDtcblx0bWFyZ2luLXRvcDogMTBweDtcblx0cGFkZGluZy1sZWZ0OiAxMHB4O1xuXHRjb2xvcjogIzZjNmM2Yztcblx0YmFja2dyb3VuZDogI2ZjZmNmYztcblx0b3V0bGluZTogbm9uZTtcblx0fVxuXG5cdGlucHV0Lm5nLWRpcnR5Lm5nLWludmFsaWQubmctdG91Y2hlZHtcbiAgICAgYm9yZGVyOiAxcHggc29saWQgIzhlMDYwNiFpbXBvcnRhbnQ7XG4gICAgfVxuICAgXG4gICAudGV4dC1maWVsZDpmb2N1cyB7XG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMCAycHggcmdiYSgwLDAsMCwgLjMpO1xuXHRjb2xvcjogI2E2YTZhNjtcblx0YmFja2dyb3VuZDogd2hpdGU7XG5cdH1cbiAgXG4gICAuYnV0dG9uIHtcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFxuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJvcmRlcjogMXB4IHNvbGlkICMyYTM1NDI7XG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgIzJhMzU0Mjtcblx0d2lkdGg6IDI0MnB4O1xuXHRoZWlnaHQ6IDQwcHg7XG5cdG1hcmdpbi10b3A6IDIwcHg7XG5cdFxuXHRiYWNrZ3JvdW5kOiAjMmEzNTQyO1xuXHRcblx0Y3Vyc29yOiBwb2ludGVyO1xuXHRjb2xvcjogd2hpdGU7XG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHR0ZXh0LXNoYWRvdzogMCAtMXB4IDAgIzJhMzU0Mjtcblx0XG5cdGZvbnQtc2l6ZTogMTNweDtcbiAgICB9XG4gICAgLmJ1dHRvbjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMmEzNTQyZTA7XG4gICAgfVxuICAgIC5idXR0b246YWN0aXZlIHtcblx0IGJhY2tncm91bmQ6ICMyYTM1NDJlMDtcblx0XG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMCAycHggcmdiYSgwLDAsMCwgLjMpLCAwIDFweCAwIHdoaXRlO1xuXHR9XG5cblx0aDIge1xuXHQgICAgcGFkZGluZzogMTBweDtcblx0fVxufSIsImZvcm0uYWRtaW4ge1xuICB3aWR0aDogMjgwcHg7XG4gIGhlaWdodDogMjYwcHg7XG4gIG1hcmdpbjogMjAwcHggYXV0bztcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxcHg7XG59XG5mb3JtLmFkbWluIC50ZXh0LWZpZWxkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2E2YTZhNjtcbiAgd2lkdGg6IDIzMHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBjb2xvcjogIzZjNmM2YztcbiAgYmFja2dyb3VuZDogI2ZjZmNmYztcbiAgb3V0bGluZTogbm9uZTtcbn1cbmZvcm0uYWRtaW4gaW5wdXQubmctZGlydHkubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzhlMDYwNiAhaW1wb3J0YW50O1xufVxuZm9ybS5hZG1pbiAudGV4dC1maWVsZDpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBjb2xvcjogI2E2YTZhNjtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5mb3JtLmFkbWluIC5idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMyYTM1NDI7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgIzJhMzU0MjtcbiAgd2lkdGg6IDI0MnB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGJhY2tncm91bmQ6ICMyYTM1NDI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1zaGFkb3c6IDAgLTFweCAwICMyYTM1NDI7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cbmZvcm0uYWRtaW4gLmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMyYTM1NDJlMDtcbn1cbmZvcm0uYWRtaW4gLmJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMmEzNTQyZTA7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAycHggcmdiYSgwLCAwLCAwLCAwLjMpLCAwIDFweCAwIHdoaXRlO1xufVxuZm9ybS5hZG1pbiBoMiB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4iXX0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseAdminComponent } from '../BaseAdminComponent';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { LookupService } from '../../shared/services/lookup.service';\r\nimport { LazyLoadEvent } from '../types';\r\nimport { Account, AccountInfo } from './model';\r\ndeclare var $: any;\r\n@Component({\r\n    selector: 'manage-account',\r\n    templateUrl: './manage-account.component.html',\r\n    styleUrls: ['../styles/common.less']\r\n})\r\nexport class ManageAccountComponent extends BaseAdminComponent{\r\n  accounts: any[] = [];\r\n  datasource: any[] = [];\r\n  public cols: any[];\r\n  accountInfo: AccountInfo;\r\n  account: Account;\r\n  totalRecords: number;\r\n  loading: boolean;\r\n  pageSizeOptions = [10, 25, 50, {showAll: 'All'}]\r\n  disable = false;\r\n  sourceOfFunds: number[] = [];\r\n  selectedDisclosureValues: number[] = [];\r\n  selectedFundAccount: number[] = [];\r\n  selectedSecuritiesAccount: number[] = [];\r\n  constructor(\r\n  \troute: ActivatedRoute,\r\n    router: Router,\r\n    private adminSvc: AdminService,\r\n    private lookupSvc: LookupService,\r\n    private ref: ChangeDetectorRef){\r\n    super(route, router);\r\n    setTimeout(()=>{this.disable = true}, 5000)\r\n  }\r\n\r\n    ngOnInit() {\r\n        //datasource imitation\r\n\t    this.adminSvc.getAccountList().subscribe((res)=>{\r\n\t    this.datasource = res['list'];\r\n\t    this.totalRecords = this.datasource.length;\r\n\t\t    }, err => {\r\n\t\t    \tthis.onError(err);\r\n\t\t});\r\n        this.loading = true;\r\n    }\r\n\r\n    loadCarsLazy(event) {  \r\n        this.loading = true;\r\n        //in a real application, make a remote request to load data using state metadata from event\r\n        //event.first = First row offset\r\n        //event.rows = Number of rows per page\r\n        //event.sortField = Field name to sort with\r\n        //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n        //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n        //imitate db connection over a network\r\n        setTimeout(() => {\r\n            if (this.datasource) {\r\n                this.accounts = this.datasource.slice(event.first, (event.first + event.rows));\r\n                this.loading = false;\r\n                this.ref.detectChanges();\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n    getAccountInfo(isExpanded: boolean, accountID: number){\r\n        if(isExpanded){\r\n         if($('i.pi.pi-chevron-down').length){\r\n           let el = $('i.pi.pi-chevron-down').parent()[0];\r\n           el.click();\r\n         }\r\n          this.adminSvc.accountInfo(accountID).subscribe((res)=>{\r\n            this.accountInfo = res['account_info'];\r\n            this.account = res['account'];\r\n            this.sourceOfFunds = this.accountInfo.sources_of_found_ids?this.accountInfo.sources_of_found_ids.split(',').map(Number):[];\r\n            this.selectedDisclosureValues = this.accountInfo.other_information_disclosure_ids?this.accountInfo.other_information_disclosure_ids.split(',').map(Number):[];\r\n            this.selectedFundAccount = this.accountInfo.found_account_ids?this.accountInfo.found_account_ids.split(',').map(Number):[];\r\n            this.selectedSecuritiesAccount = this.accountInfo.securities_account_ids?this.accountInfo.securities_account_ids.split(',').map(Number):[];\r\n            console.log(this.accountInfo);\r\n            this.ref.detectChanges();\r\n          })\r\n        }\r\n        console.log(isExpanded, accountID);\r\n    }\r\n\r\n    submitForm(form: any){\r\n           if (!form.valid) {\r\n            return false;\r\n        }\r\n\r\n        this.adminSvc.updateAccountInfo(this.accountInfo).subscribe((res)=>{\r\n            this.onSuccess();\r\n        },err=>{\r\n          this.onError(err);\r\n          this.onRequestFailed();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    updateAccount(){\r\n       this.adminSvc.updateAccount(this.account).subscribe((res)=>{\r\n            this.onSuccess();\r\n        },err=>{\r\n          this.onError(err);\r\n          this.onRequestFailed();\r\n        })\r\n    }\r\n\r\n}","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseAdminComponent } from '../BaseAdminComponent';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { IdentityPreviewDialogService } from '../../shared/dialogs/identity-preview-dialog/dialog.service';\r\nimport { LazyLoadEvent } from '../types';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Profile } from './model';\r\ndeclare var $: any;\r\n@Component({\r\n    selector: 'manage-clients',\r\n    templateUrl: './manage-client.component.html',\r\n    styleUrls: ['../styles/common.less'],\r\n    providers: [MessageService]\r\n})\r\nexport class ManageClientsComponent extends BaseAdminComponent{\r\n  users: any[] = [];\r\n  datasource: any[] = [];\r\n  totalRecords: number;\r\n  loading: boolean;\r\n  pageSizeOptions = [10, 25, 50, {showAll: 'All'}]\r\n  disable = false;\r\n  constructor(\r\n  \troute: ActivatedRoute,\r\n    router: Router,\r\n    private adminSvc: AdminService,\r\n    private ref: ChangeDetectorRef,\r\n    private messageSvc: MessageService,\r\n    private identityPreviewDialogSvc: IdentityPreviewDialogService){\r\n    super(route, router);\r\n    setTimeout(()=>{this.disable = true}, 5000)\r\n  }\r\n\r\n    ngOnInit() {\r\n      this.getClientList();\r\n    }\r\n\r\n    getClientList(){\r\n              //datasource imitation\r\n      this.adminSvc.getProfileList().subscribe((res)=>{\r\n      this.datasource = res['list'];\r\n      this.totalRecords = this.datasource.length;\r\n        }, err => {\r\n          this.onError(err);\r\n        });\r\n        this.loading = true;\r\n    }\r\n\r\n    loadCarsLazy(event) {  \r\n        this.loading = true;\r\n        //in a real application, make a remote request to load data using state metadata from event\r\n        //event.first = First row offset\r\n        //event.rows = Number of rows per page\r\n        //event.sortField = Field name to sort with\r\n        //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n        //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n        //imitate db connection over a network\r\n        setTimeout(() => {\r\n            if (this.datasource) {\r\n                this.users = this.datasource.slice(event.first, (event.first + event.rows));\r\n                this.loading = false;\r\n                this.ref.detectChanges();\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n    toggleExpand(isExpanded: boolean, accountID: number){\r\n        if(isExpanded){\r\n          if($('i.pi.pi-chevron-down').length){\r\n           let el = $('i.pi.pi-chevron-down').parent()[0];\r\n           el.click();\r\n         }\r\n       }\r\n     }\r\n    updateUser(user: Profile){\r\n      debugger\r\n      this.adminSvc.updateUser(user).subscribe((res)=>{\r\n        this.onSuccess();\r\n      },err=>{\r\n        this.onError(err);\r\n        this.onRequestFailed();\r\n      })\r\n    }\r\n\r\n    deleteUser(id: any){\r\n      this.adminSvc.deleteUser(id).subscribe((res)=>{\r\n        this.onSuccess();\r\n        window.location.reload();\r\n      },err=>{\r\n        this.onError(err);\r\n        this.onRequestFailed();\r\n      })\r\n    }\r\n\r\n    openDocument(data: any) {\r\n     this.identityPreviewDialogSvc.showDialog(data);\r\n    }\r\n \r\n\r\n}","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseAdminComponent } from '../BaseAdminComponent';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { LazyLoadEvent } from '../types';\r\n@Component({\r\n    selector: 'manage-transaction',\r\n    templateUrl: './manage-transaction.component.html'\r\n})\r\nexport class ManageTransactionComponent extends BaseAdminComponent{\r\n  transactions: any[] = [];\r\n  datasource: any[] = [];\r\n  public cols: any[];\r\n  totalRecords: number;\r\n  loading: boolean;\r\n  pageSizeOptions = [10, 25, 50, {showAll: 'All'}]\r\n  disable = false;\r\n\r\n  constructor(\r\n  \troute: ActivatedRoute,\r\n    router: Router,\r\n    private adminSvc: AdminService,\r\n    private ref: ChangeDetectorRef){\r\n    super(route, router);\r\n    setTimeout(()=>{this.disable = true}, 5000)\r\n  }\r\n\r\n    ngOnInit() {\r\n        //datasource imitation\r\n\t    this.adminSvc.getTransactionList().subscribe((res)=>{\r\n\t    this.datasource = res['list'];\r\n\t    this.totalRecords = this.datasource.length;\r\n\t\t    }, err => {\r\n\t\t    \tthis.onError(err);\r\n\t\t});\r\n        this.loading = true;\r\n    }\r\n\r\n    loadCarsLazy(event) {  \r\n        this.loading = true;\r\n        //in a real application, make a remote request to load data using state metadata from event\r\n        //event.first = First row offset\r\n        //event.rows = Number of rows per page\r\n        //event.sortField = Field name to sort with\r\n        //event.sortOrder = Sort order as number, 1 for asc and -1 for dec\r\n        //filters: FilterMetadata object having field as key and filter value, filter matchMode as value\r\n\r\n        //imitate db connection over a network\r\n        setTimeout(() => {\r\n            if (this.datasource) {\r\n                this.transactions = this.datasource.slice(event.first, (event.first + event.rows));\r\n                this.loading = false;\r\n                this.ref.detectChanges();\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n}","export default \".dashboardCard a:hover {\\n  color: transparent!important;\\n}\\n.radio-button {\\n  display: none;\\n}\\n.radio-button-click-target {\\n  cursor: pointer;\\n  display: inline-block;\\n  font-size: 16px;\\n  line-height: 1.5;\\n  padding: 14px 14px 14px 32px;\\n  position: relative;\\n}\\n.radio-button-click-target:hover .radio-button-circle:before,\\n.radio-button-click-target:focus .radio-button-circle:before {\\n  border-color: #444;\\n}\\n.radio-button-click-target:active .radio-button-circle:before {\\n  transform: scale(1.1);\\n}\\n.radio-button-circle {\\n  border-radius: 50%;\\n  cursor: pointer;\\n  display: block;\\n  height: 8px;\\n  left: 4px;\\n  position: absolute;\\n  top: 20px;\\n  transition: background-color 0.1s ease-out;\\n  vertical-align: middle;\\n  width: 8px;\\n}\\n.radio-button-circle:before {\\n  border: 3px solid #ccc;\\n  border-radius: 50%;\\n  content: '';\\n  display: inline-block;\\n  height: 20px;\\n  position: absolute;\\n  top: -6px;\\n  transition: border-color 0.1s ease-out, transform 0.1s ease-out;\\n  left: -6px;\\n  width: 20px;\\n}\\n.radio-button:checked + .radio-button-click-target .radio-button-circle {\\n  background-color: #444;\\n}\\n.radio-button:disabled + .radio-button-click-target {\\n  cursor: not-allowed;\\n}\\n.radio-button:disabled + .radio-button-click-target .radio-button-circle:before {\\n  border-color: #e2e2e2;\\n}\\n.radio-button:disabled + .radio-button-click-target:active .radio-button-circle:before {\\n  transform: none;\\n}\\n.ui-messages {\\n  position: absolute!important;\\n  z-inde: 9!important;\\n}\\ninput[type=\\\"date\\\"] {\\n  display: block;\\n  width: 100%;\\n  height: 35px;\\n  border: 1px solid #a6a6a6;\\n  border-radius: 3px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZG1pbi9zdHlsZXMvRDovUHJvamVjdHMvcGFydG5lci9ncmFuZC1wYXJ0bmVycy13ZWIvc3JjL2FkbWluL3N0eWxlcy9jb21tb24ubGVzcyIsInNyYy9hZG1pbi9zdHlsZXMvY29tbW9uLmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUM7RUFFSSw0QkFBQTtBQ0FMO0FER0U7RUFDQSxhQUFBO0FDREY7QURJQTtFQUNFLGVBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLDRCQUFBO0VBQ0Esa0JBQUE7QUNGRjtBRElBOztFQUNFLGtCQUFBO0FDREY7QURHQTtFQUVVLHFCQUFBO0FDRFY7QURJQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxXQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLDBDQUFBO0VBQ0Esc0JBQUE7RUFDQSxVQUFBO0FDRkY7QURJQTtFQUNFLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EscUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBRUEsK0RBQUE7RUFFQSxVQUFBO0VBQ0EsV0FBQTtBQ0ZGO0FES0E7RUFDRSxzQkFBQTtBQ0hGO0FETUE7RUFDRSxtQkFBQTtBQ0pGO0FETUE7RUFDRSxxQkFBQTtBQ0pGO0FETUE7RUFFVSxlQUFBO0FDSlY7QURPQTtFQUNDLDRCQUFBO0VBQ0EsbUJBQUE7QUNMRDtBRE9BO0VBQ0ksY0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQ0xKIiwiZmlsZSI6InNyYy9hZG1pbi9zdHlsZXMvY29tbW9uLmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgLmRhc2hib2FyZENhcmQge1xuXHQgYTpob3ZlciB7XG5cdCAgICBjb2xvcjogdHJhbnNwYXJlbnQhaW1wb3J0YW50O1xuXHR9XG4gIH1cbiAgLnJhZGlvLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0IHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgcGFkZGluZzogMTRweCAxNHB4IDE0cHggMzJweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLnJhZGlvLWJ1dHRvbi1jbGljay10YXJnZXQ6aG92ZXIgLnJhZGlvLWJ1dHRvbi1jaXJjbGU6YmVmb3JlLCAucmFkaW8tYnV0dG9uLWNsaWNrLXRhcmdldDpmb2N1cyAucmFkaW8tYnV0dG9uLWNpcmNsZTpiZWZvcmUge1xuICBib3JkZXItY29sb3I6ICM0NDQ7XG59XG4ucmFkaW8tYnV0dG9uLWNsaWNrLXRhcmdldDphY3RpdmUgLnJhZGlvLWJ1dHRvbi1jaXJjbGU6YmVmb3JlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xufVxuXG4ucmFkaW8tYnV0dG9uLWNpcmNsZSB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiA4cHg7XG4gIGxlZnQ6IDRweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDIwcHg7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjFzIGVhc2Utb3V0O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB3aWR0aDogOHB4O1xufVxuLnJhZGlvLWJ1dHRvbi1jaXJjbGU6YmVmb3JlIHtcbiAgYm9yZGVyOiAzcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDIwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtNnB4O1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgLjFzIGVhc2Utb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAuMXMgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAuMXMgZWFzZS1vdXQsIHRyYW5zZm9ybSAuMXMgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAuMXMgZWFzZS1vdXQsIHRyYW5zZm9ybSAuMXMgZWFzZS1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIC4xcyBlYXNlLW91dDtcbiAgbGVmdDogLTZweDtcbiAgd2lkdGg6IDIwcHg7XG59XG5cbi5yYWRpby1idXR0b246Y2hlY2tlZCArIC5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0IC5yYWRpby1idXR0b24tY2lyY2xlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ0NDtcbn1cblxuLnJhZGlvLWJ1dHRvbjpkaXNhYmxlZCArIC5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0IHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbi5yYWRpby1idXR0b246ZGlzYWJsZWQgKyAucmFkaW8tYnV0dG9uLWNsaWNrLXRhcmdldCAucmFkaW8tYnV0dG9uLWNpcmNsZTpiZWZvcmUge1xuICBib3JkZXItY29sb3I6ICNlMmUyZTI7XG59XG4ucmFkaW8tYnV0dG9uOmRpc2FibGVkICsgLnJhZGlvLWJ1dHRvbi1jbGljay10YXJnZXQ6YWN0aXZlIC5yYWRpby1idXR0b24tY2lyY2xlOmJlZm9yZSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBub25lO1xuICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTtcbn1cblxuLnVpLW1lc3NhZ2Vze1xuXHRwb3NpdGlvbjogYWJzb2x1dGUhaW1wb3J0YW50O1xuXHR6LWluZGU6OSFpbXBvcnRhbnQ7XG59XG5pbnB1dFt0eXBlPVwiZGF0ZVwiXXtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2E2YTZhNjtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgfSIsIi5kYXNoYm9hcmRDYXJkIGE6aG92ZXIge1xuICBjb2xvcjogdHJhbnNwYXJlbnQhaW1wb3J0YW50O1xufVxuLnJhZGlvLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ucmFkaW8tYnV0dG9uLWNsaWNrLXRhcmdldCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIHBhZGRpbmc6IDE0cHggMTRweCAxNHB4IDMycHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0OmhvdmVyIC5yYWRpby1idXR0b24tY2lyY2xlOmJlZm9yZSxcbi5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0OmZvY3VzIC5yYWRpby1idXR0b24tY2lyY2xlOmJlZm9yZSB7XG4gIGJvcmRlci1jb2xvcjogIzQ0NDtcbn1cbi5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0OmFjdGl2ZSAucmFkaW8tYnV0dG9uLWNpcmNsZTpiZWZvcmUge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xufVxuLnJhZGlvLWJ1dHRvbi1jaXJjbGUge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogOHB4O1xuICBsZWZ0OiA0cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMXMgZWFzZS1vdXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiA4cHg7XG59XG4ucmFkaW8tYnV0dG9uLWNpcmNsZTpiZWZvcmUge1xuICBib3JkZXI6IDNweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMjBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC02cHg7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjFzIGVhc2Utb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAwLjFzIGVhc2Utb3V0O1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4xcyBlYXNlLW91dCwgdHJhbnNmb3JtIDAuMXMgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjFzIGVhc2Utb3V0LCB0cmFuc2Zvcm0gMC4xcyBlYXNlLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC4xcyBlYXNlLW91dDtcbiAgbGVmdDogLTZweDtcbiAgd2lkdGg6IDIwcHg7XG59XG4ucmFkaW8tYnV0dG9uOmNoZWNrZWQgKyAucmFkaW8tYnV0dG9uLWNsaWNrLXRhcmdldCAucmFkaW8tYnV0dG9uLWNpcmNsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG59XG4ucmFkaW8tYnV0dG9uOmRpc2FibGVkICsgLnJhZGlvLWJ1dHRvbi1jbGljay10YXJnZXQge1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuLnJhZGlvLWJ1dHRvbjpkaXNhYmxlZCArIC5yYWRpby1idXR0b24tY2xpY2stdGFyZ2V0IC5yYWRpby1idXR0b24tY2lyY2xlOmJlZm9yZSB7XG4gIGJvcmRlci1jb2xvcjogI2UyZTJlMjtcbn1cbi5yYWRpby1idXR0b246ZGlzYWJsZWQgKyAucmFkaW8tYnV0dG9uLWNsaWNrLXRhcmdldDphY3RpdmUgLnJhZGlvLWJ1dHRvbi1jaXJjbGU6YmVmb3JlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gIHRyYW5zZm9ybTogbm9uZTtcbn1cbi51aS1tZXNzYWdlcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSFpbXBvcnRhbnQ7XG4gIHotaW5kZTogOSFpbXBvcnRhbnQ7XG59XG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzNXB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjYTZhNmE2O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG4iXX0= */\"","export default \"body {\\n  margin: 0;\\n  font-family: Verdana, Geneva, sans-serif;\\n}\\n/* header */\\nheader[role=banner] {\\n  background: white;\\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.15);\\n}\\nheader[role=banner] h1 {\\n  margin: 0;\\n  font-weight: 300;\\n  padding: 1rem;\\n}\\nheader[role=banner] .utilities li a {\\n  padding: 0.7em;\\n  display: block;\\n}\\nnav[role=navigation] {\\n  background: #2a3542;\\n  color: #ddd;\\n  /* icons */\\n}\\nnav[role=navigation] li {\\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\\n}\\nnav[role=navigation] li a {\\n  color: #ddd;\\n  text-decoration: none;\\n  display: block;\\n  padding: 0.7em;\\n}\\nnav[role=navigation] li a.active-link {\\n  background: #2196f3ad;\\n}\\nnav[role=navigation] li a:hover {\\n  background-color: rgba(255, 255, 255, 0.05);\\n}\\nfooter[role=contentinfo] {\\n  background: slategray;\\n  color: #ddd;\\n  font-size: 0.8em;\\n  text-align: center;\\n  padding: 0.2em;\\n}\\nul,\\nli {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n}\\nmain li {\\n  position: relative;\\n  padding-left: 1.2em;\\n  margin: 0.5em 0;\\n}\\nmain li:before {\\n  content: '';\\n  position: absolute;\\n  width: 0;\\n  height: 0;\\n  left: 0;\\n  top: 0.3em;\\n  border-left: solid 10px #dde;\\n  border-top: solid 5px transparent;\\n  border-bottom: solid 5px transparent;\\n}\\n@media screen and (min-width: 600px) {\\n  header[role=banner] {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    z-index: 99;\\n    height: 60px;\\n  }\\n  header[role=banner] .utilities {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    background: transparent;\\n    color: darkslategray;\\n    width: auto;\\n  }\\n  header[role=banner] .utilities li {\\n    display: inline-block;\\n  }\\n  header[role=banner] .utilities li a {\\n    padding: 0.5em 1em;\\n  }\\n  nav[role=navigation] {\\n    position: fixed;\\n    width: 230px;\\n    top: 60px;\\n    bottom: 0px;\\n  }\\n  main[role=main] {\\n    margin: 75px 0 40px 235px;\\n  }\\n  main[role=main]:after {\\n    content: \\\"\\\";\\n    display: table;\\n    clear: both;\\n  }\\n  footer[role=contentinfo] {\\n    position: fixed;\\n    width: 100%;\\n    bottom: 0;\\n    left: 0px;\\n    margin: 0;\\n  }\\n}\\n@media screen and (min-width: 900px) {\\n  footer[role=contentinfo] {\\n    position: fixed;\\n    width: 100%;\\n    bottom: 0;\\n    left: 0px;\\n    margin: 0;\\n  }\\n}\\n/* Profile */\\n.profile-dropdown {\\n  display: inline-block;\\n  position: relative;\\n  background: #f2f2f2;\\n  width: 100%;\\n  margin: auto;\\n  font-weight: bold;\\n  cursor: pointer;\\n  font-size: 1.3rem;\\n  border-radius: 3px;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n.profile-dropdown * {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n.profile-dropdown input[type=\\\"checkbox\\\"] {\\n  display: none;\\n}\\n.profile-dropdown input[type=\\\"checkbox\\\"]:checked ~ ul {\\n  display: block;\\n  -webkit-animation: pulse 0.5s;\\n          animation: pulse 0.5s;\\n}\\n.profile-dropdown input[type=\\\"checkbox\\\"]:checked ~ img {\\n  background: #2a3542;\\n}\\n.profile-dropdown input[type=\\\"checkbox\\\"]:checked ~ label {\\n  background: #2a3542;\\n}\\n.profile-dropdown input[type=\\\"checkbox\\\"]:checked ~ label i {\\n  color: #f2f2f2;\\n}\\n.profile-dropdown input[type=\\\"checkbox\\\"]:checked ~ label:after {\\n  content: '';\\n  position: absolute;\\n  top: 100%;\\n  right: calc(50% - 10px);\\n  display: block;\\n  border-style: solid;\\n  border-width: 7px 10px 0 10px;\\n  border-color: #2a3542 transparent transparent transparent;\\n  width: 0;\\n  height: 0;\\n  z-index: 9;\\n}\\n.profile-dropdown img {\\n  display: inline-block;\\n  background: #d9d9d9;\\n  height: 2.5rem;\\n  vertical-align: middle;\\n  margin-right: 1rem;\\n  margin: 0.5rem 0.75rem 0.5rem 0.5rem;\\n  border-radius: 50%;\\n}\\n.profile-dropdown span {\\n  display: inline-block;\\n  vertical-align: sub;\\n  width: 125px;\\n  margin-right: 2rem;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.profile-dropdown ul {\\n  display: none;\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  background: #fff;\\n  position: absolute;\\n  top: 100%;\\n  right: 0;\\n  width: 100%;\\n  border: 1px solid #f2f2f2;\\n}\\n.profile-dropdown ul li {\\n  display: block!important;\\n}\\n.profile-dropdown ul li a {\\n  display: block!important;\\n  padding: 0.75rem 1rem;\\n  text-decoration: none;\\n  color: #737373;\\n  font-size: 1rem;\\n}\\n.profile-dropdown ul li a i {\\n  font-size: 1.3rem;\\n  vertical-align: middle;\\n  margin: 0 0.75rem 0 -0.25rem;\\n}\\n.profile-dropdown ul li a:hover {\\n  background: #e5e5e5;\\n}\\n.profile-dropdown > label {\\n  position: relative;\\n  height: 3.5rem;\\n  display: block;\\n  cursor: pointer;\\n  text-decoration: none;\\n  background: transparent;\\n  color: #333;\\n  box-sizing: border-box;\\n  padding: 0.9rem;\\n  float: right;\\n}\\n.profile-dropdown > label i {\\n  color: #b2b2b2;\\n  font-size: 1.75rem;\\n}\\n.profile-dropdown:after {\\n  content: '';\\n  display: table;\\n  clear: both;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64, */\""],"sourceRoot":"webpack:///"}